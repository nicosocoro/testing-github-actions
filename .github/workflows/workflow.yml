on:
  push:
    branches:
      - master
name: Publish Website

env:
  AZURE_WEBAPP_SOLUTION: 'code/TestingGitHubActions.sln'     # set this to your application's name
  # AZURE_WEBAPP_NAME: 'sw-devprocess-web-test'    # set this to your application's name
  # AZURE_WEBAPP_PACKAGE_PATH: 'code/DevProcess.Web/DevProcess.Web.csproj'          # set this to the dot net version to use

jobs:
  FTP-Deploy-Action:
    name: FTP-Deploy-Action
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.1.0
      with:
        fetch-depth: 2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
    
    - name: Restore NuGet packages
      run: nuget restore ${{ env.AZURE_WEBAPP_SOLUTION }}
  
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.0
      with:
        vs-version: "[16.4,16.9)"
      #  vs-version: "[16.4,16.5]"  #Version of Visual Studio to search; defaults to latest if not specified

    - name: Run MSBuild
      run: msbuild ${{ env.AZURE_WEBAPP_SOLUTION }}

    - name: FTP-Deploy-Action
      uses: SamKirkland/FTP-Deploy-Action@3.1.1
      with:
        local-dir: 'code/TestingGitHubActions.Web/'
        ftp-server: '${{ secrets.FTP_SERVER }}/site/wwwroot/'
        ftp-username: ${{ secrets.FTP_USER_NAME }}
        ftp-password: ${{ secrets.FTP_PASSWORD }}

## first
# on:
#   push:
#     branches:
#       - master

#       # CONFIGURATION
# #
# # For help, go to https://github.com/Azure/Actions
# #
# # 1. Set up the following secrets in your repository:
# #   AZURE_WEBAPP_PUBLISH_PROFILE
# #
# # 2. Change these variables for your configuration:
# env:
#   # AZURE_WEBAPP_NAME: 'sw-devprocess-web-test'    # set this to your application's name
#   # AZURE_WEBAPP_SOLUTION: 'code/DevProcess.Services.sln'     # set this to your application's name
#   # AZURE_WEBAPP_PACKAGE_PATH: 'code/DevProcess.Web/DevProcess.Web.csproj'          # set this to the dot net version to use

#   AZURE_WEBAPP_NAME: 'sw-devprocess-web-test'
#   AZURE_WEBAPP_SOLUTION: 'code/TestingGitHubActions.sln'     # set this to your application's name
#   AZURE_WEBAPP_PACKAGE_PATH: 'code/TestingGitHubActions.Web/TestingGitHubActions.Web.csproj'

# #   AZURE_WEBAPP_NAME: 'sw-devprocess-web-test'
# #   AZURE_WEBAPP_SOLUTION: 'code/DevProcess.Services.sln'     # set this to your application's name
# #   AZURE_WEBAPP_PROJECT: 'code/DevProcess.Web/DevProcess.Web.csproj'
# #   AZURE_WEBAPP_PACKAGE_PATH: 'sw-devprocess-web-test.scm.azurewebsites.net:443'      # set this to the path to your web app project, defaults to the repository root
# jobs:
#   build-and-deploy:
#     runs-on: windows-latest
    
#     steps:
#     - uses: actions/checkout@v2
    
#     - name: Setup NuGet
#       uses: NuGet/setup-nuget@v1.0.2
    
#     - name: Restore NuGet packages
#       run: nuget restore ${{ env.AZURE_WEBAPP_SOLUTION }}
  
#     - name: Add msbuild to PATH
#       uses: microsoft/setup-msbuild@v1.0.0
#       with:
#         vs-version: "[16.4,16.9)"
#       #  vs-version: "[16.4,16.5]"  #Version of Visual Studio to search; defaults to latest if not specified

#     - name: Run MSBuild
#       run: msbuild ${{ env.AZURE_WEBAPP_SOLUTION }}
       
#     - name: 'Run Azure webapp deploy action using publish profile credentials'
#       uses: azure/webapps-deploy@v2
#       with: 
#         app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
#         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} # Define secret variable in repository settings as per action documentation
#         package: 'code/'
#          # package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/DevProcess.Web/'
  




  # For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples



# second version
# name: Build and Deploy

# on:
#   push:
#     branches:
#       - dev

# env:
#   AZURE_WEBAPP_NAME: 'sw-devprocess-web-test'
#   AZURE_WEBAPP_SOLUTION: 'code/DevProcess.Services.sln'     # set this to your application's name
#   AZURE_WEBAPP_PROJECT: 'code/DevProcess.Web/DevProcess.Web.csproj'
#   AZURE_WEBAPP_PACKAGE_PATH: 'sw-devprocess-web-test.scm.azurewebsites.net:443'      # set this to the path to your web app project, defaults to the repository root

# jobs:
#   build:
#     name: Build and deploy
#     runs-on: windows-latest
#     steps:
#     - uses: actions/checkout@v2
    
#     - name: Setup MSBuild path
#       uses: microsoft/setup-msbuild@v1.0.1
#       with:
#         vs-version: "[16.4,16.9)"
    
#     - name: Setup NuGet
#       uses: NuGet/setup-nuget@v1.0.2
    
#     - name: Restore NuGet packages
#       run: nuget restore ${{ env.AZURE_WEBAPP_SOLUTION }}

#     # - name: Build
#     #      run: msbuild ${{ env.AZURE_WEBAPP_PROJECT }} /p:Configuration=Release

#     - name: Publish to folder
#       id: publish_to_folder
#       run: msbuild ${{ env.AZURE_WEBAPP_PROJECT }} /p:Configuration=Release /p:DeployOnBuild=true /t:WebPublish /p:PackageAsSingleFile=false
#         # run: msbuild ${{ env.AZURE_WEBAPP_PROJECT }} /p:Configuration=Release /p:DeployOnBuild=true /t:WebPublish /t:WebPublish /p:WebPublishMethod=MSDeploy /p:publishUrl=${{ env.AZURE_WEBAPP_PACKAGE_PATH }} /p:PackageAsSingleFile=false
      
#     - name: Deploy to Azure WebApp
#       uses: azure/webapps-deploy@v1
#       with:
#         app-name: ${{ env.AZURE_WEBAPP_NAME }}
#         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#         #    p   ackage: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

#     # - name: Publish artifacts
#     #   uses: actions/upload-artifact@v1.0.0
#     #   with:
#     #     name: ${{ env.AZURE_WEBAPP_NAME }}
#     #     path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}



# first version
# name: Build and Deploy

# on:
#   push:
#     branches:
#       - dev

# env:
#   AZURE_WEBAPP_NAME: 'sw-devprocess-web-test'
#   AZURE_WEBAPP_SOLUTION: 'code/DevProcess.Services.sln'     # set this to your application's name
#   AZURE_WEBAPP_PROJECT: 'code/DevProcess.Web/DevProcess.Web.csproj'
#   AZURE_WEBAPP_PACKAGE_PATH: 'published'      # set this to the path to your web app project, defaults to the repository root

# jobs:
#   build:
#     name: Build and deploy
#     runs-on: windows-latest
#     steps:
#     - uses: actions/checkout@v2
    
#     - name: Setup MSBuild path
#       uses: microsoft/setup-msbuild@v1.0.1
#       with:
#         vs-version: "[16.4,16.9)"
    
#     - name: Setup NuGet
#       uses: NuGet/setup-nuget@v1.0.2
    
#     - name: Restore NuGet packages
#       run: nuget restore ${{ env.AZURE_WEBAPP_SOLUTION }}

#     - name: Build
#       run: msbuild ${{ env.AZURE_WEBAPP_SOLUTION }} /p:Configuration=Release

#     - name: Publish to folder
#       run: msbuild ${{ env.AZURE_WEBAPP_PROJECT }} /p:Configuration=Release /p:DeployOnBuild=true /t:WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl=${{ env.AZURE_WEBAPP_PACKAGE_PATH }} /p:PackageAsSingleFile=false

#     - name: Deploy to Azure WebApp
#       uses: azure/webapps-deploy@v1
#       with:
#         app-name: ${{ env.AZURE_WEBAPP_NAME }}
#         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#         package: 'D:\a\devprocess\devprocess\code\DevProcess.Web\published\*'

#     - name: Publish artifacts
#       uses: actions/upload-artifact@v1.0.0
#       with:
#         name: webapp
#         path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}